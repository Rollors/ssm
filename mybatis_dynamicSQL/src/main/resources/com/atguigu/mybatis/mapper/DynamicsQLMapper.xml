<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atguigu.mybatis.mapper.DynamicSQLMapper">
    <!--
        动态SQL：
        1、if,通过test 属性中的表达式判断标签中的内容是否有效
        2、where,a.若where中有条件成立，会自动生成where关键字
            b.自动将内容前多余的and去掉,但是其中内容后的and无法去掉
            c.若where标签中没有一个条件成立，则where没有任何功能
        3、trim,
            prefix,suffix:在标签中，内容前或后添加指定内容
            prefixOverrides，suffixOverrides：在标签中，内容前或后删除指定内容
        4、choose、when、otherwise
            相当于if...else if...else
            when至少设置一个（只要一个成立，下面就不再判断）
            otherwise最多设置一个
        5、foreach,
            collection:要循环的数组或集合
            item:用一个字符串来表示数字或集合中的每一个数据
            separator:设置每次循环数据之间的分隔符
            open：循环的所有内容以什么开始
            close:循环的所有内容以什么结束
        6、sql片段，可以记录一段sql，在需要使用的地方可以使用include标签引用
    -->

    <sql id="empColumns">
        emp_id,emp_name,age,gender,dept_id
    </sql>

    <select id="getEmpByCondition" resultType="Emp">
        select <include refid="empColumns" /> from t_emp where 1=1
        <if test="empName != null and empName != ''">
            and emp_name = #{empName}
        </if>
        <if test="age != null and age != ''">
            and age = #{age}
        </if>
        <if test="gender != null and gender != ''">
            and gender = #{gender}
        </if>
    </select>

    <select id="getEmpByConditionOne" resultType="Emp">
        select * from t_emp
        <where>
            <if test="empName != null and empName != ''">
                emp_name = #{empName}
            </if>
            <if test="age != null and age != ''">
                and age = #{age}
            </if>
            <if test="gender != null and gender != ''">
                and gender = #{gender}
            </if>
        </where>
    </select>

    <select id="getEmpByConditionTwo" resultType="Emp">
        select * from t_emp
        <trim prefix="where" suffixOverrides="and">
            <if test="empName != null and empName != ''">
                emp_name = #{empName} and
            </if>
            <if test="age != null and age != ''">
                age = #{age} and
            </if>
            <if test="gender != null and gender != ''">
                gender = #{gender}
            </if>
        </trim>
    </select>

    <select id="getEmpByChoose" resultType="Emp">
        select * from t_emp
        <where>
            <choose>
                <when test="empName != null and empName != ''">
                    emp_name = #{empName}
                </when>
                <when test="age != null and age != ''">
                    age = #{age}
                </when>
                <when test="gender != null and gender != ''">
                    gender = #{gender}
                </when>
            </choose>
        </where>
    </select>

    <insert id="insertMoreEmp">
        insert into t_emp values
        <foreach collection="emps" item="emp" separator=",">
            (null,#{emp.empName},#{emp.age},#{emp.gender},null)
        </foreach>
    </insert>

    <delete id="deleteMoreEmp">
<!--        delete from t_emp where emp_id in-->
<!--        (-->
<!--            <foreach collection="empIds" item="empId" separator=",">-->
<!--                #{empId}-->
<!--            </foreach>-->
<!--        )-->
<!--        <foreach collection="empIds" item="empId" separator="," open="(" close=")">-->
<!--            #{empId}-->
<!--        </foreach>-->
        delete from t_emp where
        <foreach collection="empIds" item="empId" separator="or">
            emp_id = #{empId}
        </foreach>
    </delete>
</mapper>